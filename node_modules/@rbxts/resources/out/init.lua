-- Compiled with https://roblox-ts.github.io v0.2.14
-- August 25, 2019, 3:32 AM Eastern Daylight Time

local TS = _G[script];
local exports = {};
local Folder = TS.import(TS.getModule("new")).Folder;
local _0 = TS.import(TS.getModule("services"));
local Players, ReplicatedStorage, RunService, ServerStorage = _0.Players, _0.ReplicatedStorage, _0.RunService, _0.ServerStorage;
local RESOURCES_NAME = 'Resources';
local isClient = RunService:IsClient();
local function getInstance(instanceType, name, parent, waitForChild)
	if waitForChild then
		return parent:WaitForChild(name);
	else
		local instance = parent:FindFirstChild(name);
		if not (instance) then
			if typeof(instanceType) == 'string' then
				error("Resource folder " .. instanceType .. " is not present inside " .. parent:GetFullName());
			else
				instance = instanceType.new();
				instance.Name = name;
				instance.Parent = parent;
			end;
		end;
		return instance;
	end;
end;
local getRootFolder = function()
	return getInstance(Folder, RESOURCES_NAME, ReplicatedStorage, isClient);
end;
local getLocalRootFolder = function()
	local _1;
	if isClient then
		_1 = Players.LocalPlayer;
	else
		_1 = ServerStorage;
	end;
	return getInstance(Folder, RESOURCES_NAME, _1);
end;
local function getResource(resourceType, name)
	local _2 = resourceType;
	local _3 = name;
	local _1;
	if typeof(resourceType) == 'string' then
		_1 = resourceType;
	else
		_1 = tostring(resourceType);
	end;
	return getInstance(_2, _3, getInstance(Folder, _1, getRootFolder(), isClient), isClient);
end;
local function getLocalResource(resourceType, name)
	local _2 = resourceType;
	local _3 = name;
	local _1;
	if typeof(resourceType) == 'string' then
		_1 = resourceType;
	else
		_1 = tostring(resourceType);
	end;
	return getInstance(_2, _3, getInstance(Folder, _1, getLocalRootFolder()));
end;
exports.getResource = getResource;
exports.getLocalResource = getLocalResource;
return exports;
